// Generated by CoffeeScript 1.6.1
(function() {
  var NUMOFPAGE, ShowReportsViewModel, getReportNum, getReports, reportvm;

  ShowReportsViewModel = function() {
    var self;
    self = this;
    self.reports = ko.observableArray([]);
    self.reportNum = ko.observable(0);
    self.userId = ko.observable(null);
    self.pageNum = ko.computed(function() {
      var pageNum;
      pageNum = Math.ceil(self.reportNum() / NUMOFPAGE);
      if (pageNum === 0) {
        pageNum = 1;
      }
      return pageNum;
    });
    self.currentPage = ko.observable(1);
	
	var date = getDateStr(new Date());
	self.currentWeek = ko.observable(date);
	
    return self;
  };

  NUMOFPAGE = 10;
  
  getDateStr1 = function(date, page) {
	var month, today, year, day;

	date = new Date();
	day_new = new Date();
	
	console.log('indexReportBase-getDateStr1 page:' + page);
	
	day_new.setDate(date.getDate() - date.getDay() + 4 + (page - 1)*7);
	year = day_new.getFullYear();
    month = day_new.getMonth() + 1;
	day = day_new.getDate();
	console.log('indexReportBase-getDateStr1 return: ' + year + '-' + month + '-' + day);	
		
	return "" + year + "-" + month + "-" + day;
  }
  
  getDateStr = function(date) {
      var month, today, year, day;
	  var month_first, day_first, year_first; // for calc the first day and the last day of the week
	  var month_last, day_last, year_last;
	  
	  date = new Date();
      day = new Date();
	  day_new = new Date();
      year = date.getFullYear();
      month = date.getMonth() + 1;
	  day = date.getDate();
      
	  // calc the fourth day of the week
	  day_new.setDate(date.getDate() - date.getDay() + 4);
	  year_first = day_new.getFullYear();
      month_first = day_new.getMonth() + 1;
	  day_first = day_new.getDate();
	  console.log('indexReportBase-getDateStr:' + year_first + "-" + month_first + "-" + day_first);
	  return "" + year_first + "-" + month_first + "-" + day_first;  
    };
  
  getReports = function(userId) {
	console.log('getReports userId:' + userId);
    var data;
    if (userId == null) {
      userId = null;
    }

	console.log('getReports userId:' + userId);
    data = {
      page: reportvm.currentPage(),
      numOfPage: NUMOFPAGE,
      userId: userId,
	  userAllFlag: '1',	  // show the all this weeks' report in main page
	  hasSubordinate: '1' // has Subordinate flag
    };
    return ReportModel.getReports(data, function(response) {
      if (response.state === 0) {
        return;
      }
	  console.log('indexReportBase-getReports currentPage:' + reportvm.currentPage());
      return reportvm.reports(response.data);
    });
  };

  getReportNum = function(userId) {
    if (userId == null) {
      userId = null;
    }
    return ReportModel.getReportNum(userId, function(response) {
      if (response.state === 0) {
        return;
      }
      return reportvm.reportNum(response.data);
    });
  };

  window.initPageState = function() {
    reportvm.reports([]);
    reportvm.reportNum(0);
    return reportvm.userId(null);
  };

  reportvm = new ShowReportsViewModel();

  ko.applyBindings(reportvm);

  window.getReports = getReports;

  window.getReportNum = getReportNum;

  window.reportvm = reportvm;

  $("div.pagination").on("click", "button.weekNext", function() {
	console.log('button.weekNext click');
	gotoPage(reportvm.currentPage() - 1);   // find the reports for the week before this week
    return false;
  });

  $("div.pagination").on("click", "button.weekPre", function() {
	console.log('button.weekPre click');
	gotoPage(reportvm.currentPage() + 1);  // find the reports for the week after this week
	
    return false;
  });

  window.gotoPage = function(page) {
    console.log('window.gotoPage :' + page);
    reportvm.currentPage(page);
	var date = getDateStr1(new Date(), page); 
	reportvm.currentWeek(date);
    return getReports(reportvm.userId());
  };

}).call(this);
